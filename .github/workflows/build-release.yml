name: Build & Release WCEventsFP Plugin

on:
  push:
    tags:
      - 'v*'            # es: v1.0.0, v2.1.1
  workflow_dispatch:     # esecuzione manuale

permissions:
  contents: write        # necessario per creare la Release

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PLUGIN_SLUG: wceventsfp
      PLUGIN_DIR: wceventsfp
      PHP_VERSION: '8.2'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine version
        id: ver
        run: |
          # Es: refs/tags/v1.0.0 -> 1.0.0
          if [ "${GITHUB_REF}" = "${GITHUB_REF#refs/tags/}" ]; then
            # workflow_dispatch - usa versione dal plugin
            VERSION=$(grep "^ \* Version:" wceventsfp.php | head -1 | awk '{print $3}' | tr -d ' ')
          else
            # tag push - estrai dalla tag
            RAW="${GITHUB_REF_NAME}"
            VERSION="${RAW#v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ZIP_NAME=${PLUGIN_SLUG}-${VERSION}.zip" >> $GITHUB_OUTPUT

      - name: Prepare distribution structure
        run: |
          rm -rf dist
          mkdir -p dist/${{ env.PLUGIN_DIR }}
          
          # Copia tutti i file necessari
          rsync -av \
            --exclude='.git*' \
            --exclude='.github/' \
            --exclude='dist/' \
            --exclude='tests/' \
            --exclude='node_modules/' \
            --exclude='.idea/' \
            --exclude='.vscode/' \
            --exclude='*.log' \
            --exclude='phpunit.xml' \
            --exclude='phpcs.xml' \
            --exclude='phpstan.neon' \
            --exclude='composer.json' \
            --exclude='composer.lock' \
            --exclude='package.json' \
            --exclude='package-lock.json' \
            --exclude='webpack.config.js' \
            --exclude='DEVELOPMENT.md' \
            --exclude='CONTRIBUTING.md' \
            --exclude='tools/backups/' \
            . dist/${{ env.PLUGIN_DIR }}/
          
          # Assicurati che vendor/wcefp-fpdf.php sia presente
          mkdir -p dist/${{ env.PLUGIN_DIR }}/vendor
          if [ -f vendor/wcefp-fpdf.php ]; then
            cp vendor/wcefp-fpdf.php dist/${{ env.PLUGIN_DIR }}/vendor/
          fi

      - name: Verify plugin structure
        run: |
          echo "=== Plugin structure verification ==="
          echo "Main plugin file:"
          ls -la dist/${{ env.PLUGIN_DIR }}/wceventsfp.php
          echo ""
          echo "Includes directory:"
          ls -la dist/${{ env.PLUGIN_DIR }}/includes/
          echo ""
          echo "Vendor directory:"
          ls -la dist/${{ env.PLUGIN_DIR }}/vendor/ || echo "No vendor directory"
          echo ""
          echo "Total files in distribution:"
          find dist/${{ env.PLUGIN_DIR }} -type f | wc -l

      - name: Create distribution ZIP
        working-directory: dist
        run: |
          zip -r "${{ steps.ver.outputs.ZIP_NAME }}" "${{ env.PLUGIN_DIR }}"
          echo "Created: ${{ steps.ver.outputs.ZIP_NAME }}"
          ls -lh "${{ steps.ver.outputs.ZIP_NAME }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.ver.outputs.ZIP_NAME }}
          path: dist/${{ steps.ver.outputs.ZIP_NAME }}
          retention-days: 30

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: WCEventsFP v${{ steps.ver.outputs.version }}
          body: |
            ## WCEventsFP v${{ steps.ver.outputs.version }}
            
            **üì¶ Download Pronto all'Uso**
            
            Scarica il file ZIP qui sotto e caricalo direttamente in WordPress:
            - ‚úÖ Tutte le dipendenze incluse
            - ‚úÖ Nessun Composer richiesto
            - ‚úÖ Funziona immediatamente dopo l'attivazione
            - ‚úÖ Sistema anti-WSOD integrato
            
            **üöÄ Come Installare:**
            1. Scarica `${{ steps.ver.outputs.ZIP_NAME }}`
            2. Vai in WordPress Admin ‚Üí Plugin ‚Üí Aggiungi Nuovo
            3. Clicca "Carica Plugin" e seleziona il file ZIP
            4. Attiva il plugin
            
            **‚ö†Ô∏è Non scaricare il codice sorgente** - usa solo il file ZIP qui sotto!
          files: dist/${{ steps.ver.outputs.ZIP_NAME }}
          draft: false
          prerelease: false
