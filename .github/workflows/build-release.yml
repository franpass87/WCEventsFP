name: Build & Release WP Plugin

on:
  push:
    tags:
      - 'v*'            # es: v1.0.0
  workflow_dispatch:     # esecuzione manuale

permissions:
  contents: write        # necessario per creare la Release

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PLUGIN_SLUG: wp-performance-suite  # nome cartella plugin
      PHP_VERSION: '8.2'                 # per il build; runtime su hosting puÃ² essere 8.1+
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer
          coverage: none

      - name: Install Composer deps (if any)
        run: |
          if [ -f "composer.json" ]; then
            composer install --no-dev --prefer-dist --optimize-autoloader
          fi

      - name: Determine version
        id: ver
        run: |
          # Es: refs/tags/v1.0.0 -> 1.0.0
          RAW="${GITHUB_REF_NAME}"
          VERSION="${RAW#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare dist structure
        run: |
          rm -rf dist
          mkdir -p "dist/${{ env.PLUGIN_SLUG }}"
          rsync -a \
            --exclude='.git*' \
            --exclude='.github' \
            --exclude='dist' \
            --exclude='tests' \
            --exclude='node_modules' \
            --exclude='.idea' \
            --exclude='.vscode' \
            . "dist/${{ env.PLUGIN_SLUG }}/"

      - name: Create zip
        working-directory: dist
        run: |
          zip -r "${{ env.PLUGIN_SLUG }}-${{ steps.ver.outputs.version }}.zip" "${{ env.PLUGIN_SLUG }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_SLUG }}-${{ steps.ver.outputs.version }}.zip
          path: dist/${{ env.PLUGIN_SLUG }}-${{ steps.ver.outputs.version }}.zip

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/${{ env.PLUGIN_SLUG }}-${{ steps.ver.outputs.version }}.zip
          generate_release_notes: true
              fi
              mv "$f" "${PLUGIN_DIR}/"
            done
            shopt -u dotglob
          fi
          echo "Contenuto ${PLUGIN_DIR}/:"
          ls -la "${PLUGIN_DIR}"

      - name: Rimuove file non necessari dallo ZIP
        shell: bash
        run: |
          set -e
          rm -rf "${PLUGIN_DIR}/.git" \
                 "${PLUGIN_DIR}/.github" \
                 "${PLUGIN_DIR}/node_modules" \
                 "${PLUGIN_DIR}/vendor" \
                 "${PLUGIN_DIR}/tests" \
                 "${PLUGIN_DIR}/.DS_Store" \
                 "${PLUGIN_DIR}/Thumbs.db"
          # opzionale: rimuovi file dev se presenti
          rm -f "${PLUGIN_DIR}/package-lock.json" \
                "${PLUGIN_DIR}/pnpm-lock.yaml" \
                "${PLUGIN_DIR}/yarn.lock"

      - name: Crea ZIP del plugin
        run: zip -r "${ZIP_NAME}" "${PLUGIN_DIR}" -x "*/.git/*" "*/.github/*" "*.zip"

      - name: Pubblica artifact (build logico)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}
          retention-days: 7

      - name: Crea GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: WCEventsFP ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            ${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
