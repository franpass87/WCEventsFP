!function(e){"use strict";class t{constructor(){this.isVisible=!1,this.currentTab="log",this.refreshInterval=null,this.init()}init(){this.bindEvents(),this.initConsoleInterceptor(),this.initPerformanceObserver()}bindEvents(){e(document).on("click",".wcefp-debug-tab",t=>{const r=e(t.target).data("tab");this.switchTab(r)}),e(document).on("keydown",e=>{e.altKey&&"d"===e.key&&(e.preventDefault(),this.togglePanel()),"Escape"===e.key&&this.isVisible&&this.closePanel()}),e(document).on("wcefp_debug_tab_changed",(e,t)=>{"performance"===t?this.startAutoRefresh():this.stopAutoRefresh()})}togglePanel(){this.isVisible?this.closePanel():this.openPanel()}openPanel(){e("#wcefp-debug-panel").fadeIn(300),this.isVisible=!0,this.refreshTabContent(this.currentTab),this.trackEvent("debug_panel_opened")}closePanel(){e("#wcefp-debug-panel").fadeOut(300),this.isVisible=!1,this.stopAutoRefresh(),this.trackEvent("debug_panel_closed")}switchTab(t){t!==this.currentTab&&(e(".wcefp-debug-tab").removeClass("active"),e(`.wcefp-debug-tab[data-tab="${t}"]`).addClass("active"),e(".wcefp-debug-tab-content").removeClass("active"),e(`#wcefp-debug-${t}`).addClass("active"),this.currentTab=t,this.refreshTabContent(t),e(document).trigger("wcefp_debug_tab_changed",[t]),this.trackEvent("debug_tab_switched",{tab:t}))}refreshTabContent(e){switch(e){case"performance":this.loadPerformanceData();break;case"system":this.loadSystemInfo();break;case"queries":this.loadQueryInfo();break;case"log":this.refreshLogData()}}loadPerformanceData(){const t=e(".wcefp-performance-metrics");t.html('<div class="wcefp-loading">Loading performance data...</div>'),e.post(wcefp_debug.ajax_url,{action:"wcefp_debug_performance",nonce:wcefp_debug.nonce}).done(e=>{e.success?this.renderPerformanceData(e.data):t.html('<div class="wcefp-error">Failed to load performance data</div>')}).fail(()=>{t.html('<div class="wcefp-error">Network error loading performance data</div>')})}renderPerformanceData(t){let r='<div class="wcefp-performance-summary">';r+="<h4>Current Performance</h4>",r+=`<div class="wcefp-metric">Memory Usage: ${this.formatBytes(t.memory_usage)}</div>`,r+=`<div class="wcefp-metric">Peak Memory: ${this.formatBytes(t.memory_peak)}</div>`,r+=`<div class="wcefp-metric">Database Queries: ${t.query_count}</div>`,t.performance_markers&&Object.keys(t.performance_markers).length>0&&(r+="<h4>Performance Markers</h4>",r+='<div class="wcefp-markers">',Object.entries(t.performance_markers).forEach(([e,t])=>{if("calculated_metrics"===e)r+="<h5>Calculated Metrics</h5>",r+=`<div class="wcefp-metric">Total Time: ${t.total_time?.toFixed(2)}ms</div>`,r+=`<div class="wcefp-metric">Memory Used: ${this.formatBytes(t.memory_used)}</div>`,r+=`<div class="wcefp-metric">Queries: ${t.queries_executed}</div>`;else{const s=new Date(1e3*t.timestamp).toLocaleTimeString();r+='<div class="wcefp-marker">',r+=`<strong>${e}</strong> - ${s}`,r+=`<br><small>Memory: ${this.formatBytes(t.memory)}</small>`,r+="</div>"}}),r+="</div>"),window.performance&&window.performance.timing&&(r+=this.renderBrowserPerformance()),r+="</div>",e(".wcefp-performance-metrics").html(r)}renderBrowserPerformance(){const e=window.performance.timing,t=e.navigationStart,r={"DNS Lookup":e.domainLookupEnd-e.domainLookupStart,"TCP Connection":e.connectEnd-e.connectStart,"Server Response":e.responseStart-e.requestStart,"DOM Processing":e.domComplete-e.domLoading,"Page Load":e.loadEventEnd-t};let s="<h4>Browser Performance</h4>";return Object.entries(r).forEach(([e,t])=>{s+=`<div class="wcefp-metric">${e}: ${t}ms</div>`}),s}loadSystemInfo(){const t=e(".wcefp-system-info");t.html('<div class="wcefp-loading">Loading system information...</div>'),e.post(wcefp_debug.ajax_url,{action:"wcefp_debug_info",nonce:wcefp_debug.nonce}).done(e=>{e.success?this.renderSystemInfo(e.data.system_info):t.html('<div class="wcefp-error">Failed to load system information</div>')}).fail(()=>{t.html('<div class="wcefp-error">Network error loading system information</div>')})}renderSystemInfo(t){let r='<div class="wcefp-system-sections">';Object.entries(t).forEach(([e,t])=>{r+='<div class="wcefp-system-section">',r+=`<h4>${this.capitalizeFirst(e)}</h4>`,Object.entries(t).forEach(([e,t])=>{Array.isArray(t)?(r+='<div class="wcefp-system-item">',r+=`<strong>${this.formatKey(e)}:</strong>`,r+="<ul>",t.forEach(e=>{r+="object"==typeof e?`<li>${JSON.stringify(e)}</li>`:`<li>${e}</li>`}),r+="</ul></div>"):"object"==typeof t?(r+='<div class="wcefp-system-item">',r+=`<strong>${this.formatKey(e)}:</strong>`,r+=`<pre>${JSON.stringify(t,null,2)}</pre>`,r+="</div>"):(r+='<div class="wcefp-system-item">',r+=`<strong>${this.formatKey(e)}:</strong> ${t}`,r+="</div>")}),r+="</div>"}),r+="</div>",e(".wcefp-system-info").html(r)}loadQueryInfo(){const t=e(".wcefp-query-log");t.html('<div class="wcefp-loading">Loading query information...</div>'),e.post(wcefp_debug.ajax_url,{action:"wcefp_debug_queries",nonce:wcefp_debug.nonce}).done(e=>{e.success?this.renderQueryInfo(e.data):t.html('<div class="wcefp-error">Failed to load query information</div>')}).fail(()=>{t.html('<div class="wcefp-error">Network error loading query information</div>')})}renderQueryInfo(t){let r=`<div class="wcefp-query-summary">Total Queries: ${t.total_queries}</div>`;t.query_log&&t.query_log.length>0?(r+='<div class="wcefp-query-entries">',t.query_log.forEach((e,t)=>{const s=new Date(1e3*e.timestamp).toLocaleTimeString();r+='<div class="wcefp-query-entry">',r+='<div class="wcefp-query-header">',r+=`<span class="wcefp-query-number">#${t+1}</span>`,r+=`<span class="wcefp-query-time">${s}</span>`,r+="</div>",r+=`<div class="wcefp-query-sql"><code>${this.escapeHtml(e.query)}</code></div>`,r+="</div>"}),r+="</div>"):r+='<div class="wcefp-no-queries">No queries logged yet.</div>',e(".wcefp-query-log").html(r)}refreshLogData(){this.initLogFiltering()}initLogFiltering(){e(".wcefp-log-filter").length||(e("#wcefp-debug-log").prepend('\n                <div class="wcefp-log-filter">\n                    <select id="wcefp-log-level-filter">\n                        <option value="">All Levels</option>\n                        <option value="info">Info</option>\n                        <option value="warning">Warning</option>\n                        <option value="error">Error</option>\n                        <option value="performance">Performance</option>\n                    </select>\n                    <input type="text" id="wcefp-log-search" placeholder="Search messages...">\n                </div>\n            '),e("#wcefp-log-level-filter, #wcefp-log-search").on("input",()=>{this.filterLogEntries()}))}filterLogEntries(){const t=e("#wcefp-log-level-filter").val(),r=e("#wcefp-log-search").val().toLowerCase();e(".wcefp-debug-entry").each(function(){const s=e(this),o=s.find(".wcefp-debug-level").text().replace(/[\[\]]/g,"").toLowerCase(),i=s.find(".wcefp-debug-message").text().toLowerCase();let n=!0;t&&o!==t&&(n=!1),r&&!i.includes(r)&&(n=!1),s.toggle(n)})}clearLog(){confirm("Are you sure you want to clear the debug log?")&&e.post(wcefp_debug.ajax_url,{action:"wcefp_debug_clear",nonce:wcefp_debug.nonce}).done(t=>{t.success?(e(".wcefp-debug-log-entries").html('<div class="wcefp-no-entries">Debug log cleared</div>'),this.showNotification("Debug log cleared successfully","success")):this.showNotification("Failed to clear debug log","error")}).fail(()=>{this.showNotification("Network error clearing debug log","error")})}showSystemInfo(){this.openPanel(),this.switchTab("system")}showPerformance(){this.openPanel(),this.switchTab("performance")}showQueries(){this.openPanel(),this.switchTab("queries")}startAutoRefresh(){this.refreshInterval||(this.refreshInterval=setInterval(()=>{this.isVisible&&"performance"===this.currentTab&&this.loadPerformanceData()},5e3))}stopAutoRefresh(){this.refreshInterval&&(clearInterval(this.refreshInterval),this.refreshInterval=null)}initConsoleInterceptor(){if(!wcefp_debug.is_debug_enabled)return;const e={log:console.log,warn:console.warn,error:console.error};["log","warn","error"].forEach(t=>{console[t]=(...r)=>{e[t].apply(console,r),this.addClientLog(r.join(" "),"log"===t?"info":t)}})}initPerformanceObserver(){if(window.PerformanceObserver)try{new PerformanceObserver(e=>{e.getEntries().forEach(e=>{e.duration>1e3&&this.addClientLog(`Slow resource: ${e.name} (${e.duration.toFixed(2)}ms)`,"performance")})}).observe({entryTypes:["resource"]}),new PerformanceObserver(e=>{e.getEntries().forEach(e=>{this.addClientLog(`Page navigation completed in ${e.duration.toFixed(2)}ms`,"performance")})}).observe({entryTypes:["navigation"]})}catch(e){console.warn("Performance observer not fully supported",e)}}addClientLog(t,r="info"){const s=`\n                <div class="wcefp-debug-entry wcefp-debug-${r} wcefp-client-log">\n                    <span class="wcefp-debug-time">${(new Date).toLocaleTimeString()}</span>\n                    <span class="wcefp-debug-level">[${r}]</span>\n                    <span class="wcefp-debug-message">${this.escapeHtml(t)}</span>\n                    <span class="wcefp-debug-location">client-side</span>\n                </div>\n            `;e(".wcefp-debug-log-entries").prepend(s);const o=e(".wcefp-debug-entry");o.length>100&&o.slice(100).remove()}formatBytes(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}capitalizeFirst(e){return e.charAt(0).toUpperCase()+e.slice(1)}formatKey(e){return e.replace(/_/g," ").replace(/\b\w/g,e=>e.toUpperCase())}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}showNotification(e,t="info"){window.wcefpNotifications?window.wcefpNotifications.show(e,t):console.log(`[${t.toUpperCase()}] ${e}`)}trackEvent(e,t={}){window.wcefpAnalytics&&window.wcefpAnalytics.track(`debug_${e}`,t)}}e(document).ready(function(){"undefined"!=typeof wcefp_debug&&(window.wcefpDebugTools=new t,wcefp_debug.is_debug_enabled&&console.log("%cWCEFP Debug Tools: Press Alt+D to toggle debug panel","background: #0073aa; color: white; padding: 5px 10px; border-radius: 3px;"))})}(jQuery);